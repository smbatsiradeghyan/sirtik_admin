@custom-variant dark (&:is(.dark *));

:root {
    --font-size: 16px;
    --background: #faf8f5;
    --foreground: #4a5568;
    --card: #ffffff;
    --card-foreground: #4a5568;
    --popover: #ffffff;
    --popover-foreground: #4a5568;
    --primary: #7c9885;
    --primary-foreground: #ffffff;
    --secondary: #d4e4e8;
    --secondary-foreground: #4a5568;
    --muted: #f3f1ed;
    --muted-foreground: #8b95a5;
    --accent: #e8d5c4;
    --accent-foreground: #4a5568;
    --destructive: #d4183d;
    --destructive-foreground: #ffffff;
    --border: rgba(124, 152, 133, 0.15);
    --input: transparent;
    --input-background: #ffffff;
    --switch-background: #cbced4;
    --font-weight-thin: 100;
    --font-weight-extralight: 200;
    --font-weight-light: 300;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --font-weight-extrabold: 800;
    --font-weight-black: 900;
    --ring: #7c9885;
    --chart-1: oklch(0.646 0.222 41.116);
    --chart-2: oklch(0.6 0.118 184.704);
    --chart-3: oklch(0.398 0.07 227.392);
    --chart-4: oklch(0.828 0.189 84.429);
    --chart-5: oklch(0.769 0.188 70.08);
    --radius: 0.75rem;
    --sidebar: oklch(0.985 0 0);
    --sidebar-foreground: oklch(0.145 0 0);
    --sidebar-primary: #030213;
    --sidebar-primary-foreground: oklch(0.985 0 0);
    --sidebar-accent: oklch(0.97 0 0);
    --sidebar-accent-foreground: oklch(0.205 0 0);
    --sidebar-border: oklch(0.922 0 0);
    --sidebar-ring: oklch(0.708 0 0);
}

.dark {
    --background: oklch(0.145 0 0);
    --foreground: oklch(0.985 0 0);
    --card: oklch(0.145 0 0);
    --card-foreground: oklch(0.985 0 0);
    --popover: oklch(0.145 0 0);
    --popover-foreground: oklch(0.985 0 0);
    --primary: oklch(0.985 0 0);
    --primary-foreground: oklch(0.205 0 0);
    --secondary: oklch(0.269 0 0);
    --secondary-foreground: oklch(0.985 0 0);
    --muted: oklch(0.269 0 0);
    --muted-foreground: oklch(0.708 0 0);
    --accent: oklch(0.269 0 0);
    --accent-foreground: oklch(0.985 0 0);
    --destructive: oklch(0.396 0.141 25.723);
    --destructive-foreground: oklch(0.637 0.237 25.331);
    --border: oklch(0.269 0 0);
    --input: oklch(0.269 0 0);
    --ring: oklch(0.439 0 0);
    --font-weight-medium: 500;
    --font-weight-normal: 400;
    --chart-1: oklch(0.488 0.243 264.376);
    --chart-2: oklch(0.696 0.17 162.48);
    --chart-3: oklch(0.769 0.188 70.08);
    --chart-4: oklch(0.627 0.265 303.9);
    --chart-5: oklch(0.645 0.246 16.439);
    --sidebar: oklch(0.205 0 0);
    --sidebar-foreground: oklch(0.985 0 0);
    --sidebar-primary: oklch(0.488 0.243 264.376);
    --sidebar-primary-foreground: oklch(0.985 0 0);
    --sidebar-accent: oklch(0.269 0 0);
    --sidebar-accent-foreground: oklch(0.985 0 0);
    --sidebar-border: oklch(0.269 0 0);
    --sidebar-ring: oklch(0.439 0 0);
}

@theme inline {
    --color-background: var(--background);
    --color-foreground: var(--foreground);
    --color-card: var(--card);
    --color-card-foreground: var(--card-foreground);
    --color-popover: var(--popover);
    --color-popover-foreground: var(--popover-foreground);
    --color-primary: var(--primary);
    --color-primary-foreground: var(--primary-foreground);
    --color-secondary: var(--secondary);
    --color-secondary-foreground: var(--secondary-foreground);
    --color-muted: var(--muted);
    --color-muted-foreground: var(--muted-foreground);
    --color-accent: var(--accent);
    --color-accent-foreground: var(--accent-foreground);
    --color-destructive: var(--destructive);
    --color-destructive-foreground: var(--destructive-foreground);
    --color-border: var(--border);
    --color-input: var(--input);
    --color-input-background: var(--input-background);
    --color-switch-background: var(--switch-background);
    --color-ring: var(--ring);
    --color-chart-1: var(--chart-1);
    --color-chart-2: var(--chart-2);
    --color-chart-3: var(--chart-3);
    --color-chart-4: var(--chart-4);
    --color-chart-5: var(--chart-5);
    --radius-sm: calc(var(--radius) - 4px);
    --radius-md: calc(var(--radius) - 2px);
    --radius-lg: var(--radius);
    --radius-xl: calc(var(--radius) + 4px);
    --color-sidebar: var(--sidebar);
    --color-sidebar-foreground: var(--sidebar-foreground);
    --color-sidebar-primary: var(--sidebar-primary);
    --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
    --color-sidebar-accent: var(--sidebar-accent);
    --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
    --color-sidebar-border: var(--sidebar-border);
    --color-sidebar-ring: var(--sidebar-ring);
}

@layer base {
    * {
        @apply border-border outline-ring/50;
    }

    body {
        @apply bg-background text-foreground;
    }
}

/**
 * Base typography. This is not applied to elements which have an ancestor with a Tailwind text class.
 */
@layer base {
    :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) {
        h1 {
            font-size: var(--text-2xl);
            font-weight: var(--font-weight-medium);
            line-height: 1.5;
        }

        h2 {
            font-size: var(--text-xl);
            font-weight: var(--font-weight-medium);
            line-height: 1.5;
        }

        h3 {
            font-size: var(--text-lg);
            font-weight: var(--font-weight-medium);
            line-height: 1.5;
        }

        h4 {
            font-size: var(--text-base);
            font-weight: var(--font-weight-medium);
            line-height: 1.5;
        }

        p {
            font-size: var(--text-base);
            font-weight: var(--font-weight-normal);
            line-height: 1.5;
        }

        label {
            font-size: var(--text-base);
            font-weight: var(--font-weight-medium);
            line-height: 1.5;
        }

        button {
            font-size: var(--text-base);
            font-weight: var(--font-weight-medium);
            line-height: 1.5;
        }

        input {
            font-size: var(--text-base);
            font-weight: var(--font-weight-normal);
            line-height: 1.5;
        }
    }
}

html {
    font-size: var(--font-size);
}

/*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */
@layer properties {
    @supports (((-webkit-hyphens: none)) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
        *, :before, :after, ::backdrop {
            --tw-translate-x: 0;
            --tw-translate-y: 0;
            --tw-translate-z: 0;
            --tw-rotate-x: rotateX(0);
            --tw-rotate-y: rotateY(0);
            --tw-rotate-z: rotateZ(0);
            --tw-skew-x: skewX(0);
            --tw-skew-y: skewY(0);
            --tw-space-y-reverse: 0;
            --tw-border-style: solid;
            --tw-gradient-position: initial;
            --tw-gradient-from: #0000;
            --tw-gradient-via: #0000;
            --tw-gradient-to: #0000;
            --tw-gradient-stops: initial;
            --tw-gradient-via-stops: initial;
            --tw-gradient-from-position: 0%;
            --tw-gradient-via-position: 50%;
            --tw-gradient-to-position: 100%;
            --tw-leading: initial;
            --tw-font-weight: initial;
            --tw-shadow: 0 0 #0000;
            --tw-shadow-color: initial;
            --tw-shadow-alpha: 100%;
            --tw-inset-shadow: 0 0 #0000;
            --tw-inset-shadow-color: initial;
            --tw-inset-shadow-alpha: 100%;
            --tw-ring-color: initial;
            --tw-ring-shadow: 0 0 #0000;
            --tw-inset-ring-color: initial;
            --tw-inset-ring-shadow: 0 0 #0000;
            --tw-ring-inset: initial;
            --tw-ring-offset-width: 0px;
            --tw-ring-offset-color: #fff;
            --tw-ring-offset-shadow: 0 0 #0000;
            --tw-outline-style: solid;
            --tw-backdrop-blur: initial;
            --tw-backdrop-brightness: initial;
            --tw-backdrop-contrast: initial;
            --tw-backdrop-grayscale: initial;
            --tw-backdrop-hue-rotate: initial;
            --tw-backdrop-invert: initial;
            --tw-backdrop-opacity: initial;
            --tw-backdrop-saturate: initial;
            --tw-backdrop-sepia: initial;
            --tw-duration: initial;
            --tw-ease: initial;
            --tw-scale-x: 1;
            --tw-scale-y: 1;
            --tw-scale-z: 1;
        }
    }
}

@layer theme {
    :root, :host {
        --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
        --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
        --color-gray-100: oklch(.967 .003 264.542);
        --color-black: #000;
        --color-white: #fff;
        --spacing: .25rem;
        --container-lg: 32rem;
        --container-3xl: 48rem;
        --container-4xl: 56rem;
        --container-6xl: 72rem;
        --text-sm: .875rem;
        --text-sm--line-height: calc(1.25 / .875);
        --text-base: 1rem;
        --text-base--line-height: calc(1.5 / 1);
        --text-lg: 1.125rem;
        --text-lg--line-height: calc(1.75 / 1.125);
        --text-xl: 1.25rem;
        --text-2xl: 1.5rem;
        --text-2xl--line-height: calc(2 / 1.5);
        --text-3xl: 1.875rem;
        --text-3xl--line-height: calc(2.25 / 1.875);
        --text-4xl: 2.25rem;
        --text-4xl--line-height: calc(2.5 / 2.25);
        --text-5xl: 3rem;
        --text-5xl--line-height: 1;
        --text-6xl: 3.75rem;
        --text-6xl--line-height: 1;
        --text-7xl: 4.5rem;
        --text-7xl--line-height: 1;
        --text-8xl: 6rem;
        --text-8xl--line-height: 1;
        --text-9xl: 8rem;
        --text-9xl--line-height: 1;
        --font-weight-normal: 400;
        --font-weight-medium: 500;
        --font-weight-semibold: 600;
        --leading-relaxed: 1.625;
        --radius-xs: .125rem;
        --radius-2xl: 1rem;
        --radius-3xl: 1.5rem;
        --ease-in-out: cubic-bezier(.4, 0, .2, 1);
        --blur-md: 12px;
        --aspect-video: 16 / 9;
        --default-transition-duration: .15s;
        --default-transition-timing-function: cubic-bezier(.4, 0, .2, 1);
        --default-font-family: var(--font-sans);
        --default-font-feature-settings: var(--font-sans--font-feature-settings);
        --default-font-variation-settings: var(--font-sans--font-variation-settings);
        --default-mono-font-family: var(--font-mono);
        --default-mono-font-feature-settings: var(--font-mono--font-feature-settings);
        --default-mono-font-variation-settings: var(--font-mono--font-variation-settings);
    }
}

@layer base {
    *, :after, :before, ::backdrop {
        box-sizing: border-box;
        border: 0 solid;
        margin: 0;
        padding: 0;
    }

    ::file-selector-button {
        box-sizing: border-box;
        border: 0 solid;
        margin: 0;
        padding: 0;
    }

    html, :host {
        -webkit-text-size-adjust: 100%;
        tab-size: 4;
        line-height: 1.5;
        font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
        font-feature-settings: var(--default-font-feature-settings, normal);
        font-variation-settings: var(--default-font-variation-settings, normal);
        -webkit-tap-highlight-color: transparent;
    }

    body {
        line-height: inherit;
    }

    hr {
        height: 0;
        color: inherit;
        border-top-width: 1px;
    }

    abbr:where([title]) {
        -webkit-text-decoration: underline dotted;
        text-decoration: underline dotted;
    }

    h1, h2, h3, h4, h5, h6 {
        font-size: inherit;
        font-weight: inherit;
    }

    a {
        color: inherit;
        -webkit-text-decoration: inherit;
        -webkit-text-decoration: inherit;
        text-decoration: inherit;
    }

    b, strong {
        font-weight: bolder;
    }

    code, kbd, samp, pre {
        font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
        font-feature-settings: var(--default-mono-font-feature-settings, normal);
        font-variation-settings: var(--default-mono-font-variation-settings, normal);
        font-size: 1em;
    }

    small {
        font-size: 80%;
    }

    sub, sup {
        vertical-align: baseline;
        font-size: 75%;
        line-height: 0;
        position: relative;
    }

    sub {
        bottom: -.25em;
    }

    sup {
        top: -.5em;
    }

    table {
        text-indent: 0;
        border-color: inherit;
        border-collapse: collapse;
    }

    :-moz-focusring {
        outline: auto;
    }

    progress {
        vertical-align: baseline;
    }

    summary {
        display: list-item;
    }

    ol, ul, menu {
        list-style: none;
    }

    img, svg, video, canvas, audio, iframe, embed, object {
        vertical-align: middle;
        display: block;
    }

    img, video {
        max-width: 100%;
        height: auto;
    }

    button, input, select, optgroup, textarea {
        font: inherit;
        font-feature-settings: inherit;
        font-variation-settings: inherit;
        letter-spacing: inherit;
        color: inherit;
        opacity: 1;
        background-color: #0000;
        border-radius: 0;
    }

    ::file-selector-button {
        font: inherit;
        font-feature-settings: inherit;
        font-variation-settings: inherit;
        letter-spacing: inherit;
        color: inherit;
        opacity: 1;
        background-color: #0000;
        border-radius: 0;
    }

    :where(select:is([multiple], [size])) optgroup {
        font-weight: bolder;
    }

    :where(select:is([multiple], [size])) optgroup option {
        padding-inline-start: 20px;
    }

    ::file-selector-button {
        margin-inline-end: 4px;
    }

    ::placeholder {
        opacity: 1;
        color: currentColor;
    }

    @supports (color: color-mix(in lab, red, red)) {
        ::placeholder {
            color: color-mix(in oklab, currentColor 50%, transparent);
        }
    }

    textarea {
        resize: vertical;
    }

    ::-webkit-search-decoration {
        -webkit-appearance: none;
    }

    ::-webkit-date-and-time-value {
        min-height: 1lh;
        text-align: inherit;
    }

    ::-webkit-datetime-edit {
        display: inline-flex;
    }

    ::-webkit-datetime-edit-fields-wrapper {
        padding: 0;
    }

    ::-webkit-datetime-edit {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-year-field {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-month-field {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-day-field {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-hour-field {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-minute-field {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-second-field {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-millisecond-field {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-meridiem-field {
        padding-block: 0;
    }

    :-moz-ui-invalid {
        box-shadow: none;
    }

    button, input:where([type="button"], [type="reset"], [type="submit"]) {
        appearance: button;
    }

    ::file-selector-button {
        appearance: button;
    }

    ::-webkit-inner-spin-button {
        height: auto;
    }

    ::-webkit-outer-spin-button {
        height: auto;
    }

    [hidden]:where(:not([hidden="until-found"])) {
        display: none !important;
    }

    * {
        border-color: var(--border);
        outline-color: var(--ring);
    }

    @supports (color: color-mix(in lab, red, red)) {
        * {
            outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
        }
    }

    * {
        border-color: var(--border);
        outline-color: var(--ring);
    }

    @supports (color: color-mix(in lab, red, red)) {
        * {
            outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
        }
    }

    body {
        background-color: var(--background);
        color: var(--foreground);
    }

    :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h1 {
        font-size: var(--text-2xl);
        font-weight: var(--font-weight-medium);
        line-height: 1.5;
    }

    :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h2 {
        font-size: var(--text-xl);
        font-weight: var(--font-weight-medium);
        line-height: 1.5;
    }

    :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h3 {
        font-size: var(--text-lg);
        font-weight: var(--font-weight-medium);
        line-height: 1.5;
    }

    :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h4 {
        font-size: var(--text-base);
        font-weight: var(--font-weight-medium);
        line-height: 1.5;
    }

    :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) p {
        font-size: var(--text-base);
        font-weight: var(--font-weight-normal);
        line-height: 1.5;
    }

    :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) label, :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) button {
        font-size: var(--text-base);
        font-weight: var(--font-weight-medium);
        line-height: 1.5;
    }

    :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) input {
        font-size: var(--text-base);
        font-weight: var(--font-weight-normal);
        line-height: 1.5;
    }
}

@layer utilities {
    .\@container\/card-header {
        container: card-header / inline-size;
    }

    .sr-only {
        clip: rect(0, 0, 0, 0);
        white-space: nowrap;
        border-width: 0;
        width: 1px;
        height: 1px;
        margin: -1px;
        padding: 0;
        position: absolute;
        overflow: hidden;
    }

    .absolute {
        position: absolute;
    }

    .fixed {
        position: fixed;
    }

    .relative {
        position: relative;
    }

    .sticky {
        position: sticky;
    }

    .inset-0 {
        inset: calc(var(--spacing) * 0);
    }

    .top-0 {
        top: calc(var(--spacing) * 0);
    }

    .top-1\/2 {
        top: 50%;
    }

    .top-4 {
        top: calc(var(--spacing) * 4);
    }

    .top-\[50\%\] {
        top: 50%;
    }

    .top-\[73px\] {
        top: 73px;
    }

    .right-0 {
        right: calc(var(--spacing) * 0);
    }

    .right-4 {
        right: calc(var(--spacing) * 4);
    }

    .left-0 {
        left: calc(var(--spacing) * 0);
    }

    .left-\[50\%\] {
        left: 50%;
    }

    .z-40 {
        z-index: 40;
    }

    .z-50 {
        z-index: 50;
    }

    .col-start-2 {
        grid-column-start: 2;
    }

    .row-span-2 {
        grid-row: span 2 / span 2;
    }

    .row-start-1 {
        grid-row-start: 1;
    }

    .container {
        width: 100%;
    }

    @media (width >= 40rem) {
        .container {
            max-width: 40rem;
        }
    }

    @media (width >= 48rem) {
        .container {
            max-width: 48rem;
        }
    }

    @media (width >= 64rem) {
        .container {
            max-width: 64rem;
        }
    }

    @media (width >= 80rem) {
        .container {
            max-width: 80rem;
        }
    }

    @media (width >= 96rem) {
        .container {
            max-width: 96rem;
        }
    }

    .mx-auto {
        margin-inline: auto;
    }

    .mt-1 {
        margin-top: calc(var(--spacing) * 1);
    }

    .mt-2 {
        margin-top: calc(var(--spacing) * 2);
    }

    .mt-4 {
        margin-top: calc(var(--spacing) * 4);
    }

    .mt-8 {
        margin-top: calc(var(--spacing) * 8);
    }

    .mt-12 {
        margin-top: calc(var(--spacing) * 12);
    }

    .mt-16 {
        margin-top: calc(var(--spacing) * 16);
    }

    .mb-1 {
        margin-bottom: calc(var(--spacing) * 1);
    }

    .mb-2 {
        margin-bottom: calc(var(--spacing) * 2);
    }

    .mb-3 {
        margin-bottom: calc(var(--spacing) * 3);
    }

    .mb-4 {
        margin-bottom: calc(var(--spacing) * 4);
    }

    .mb-6 {
        margin-bottom: calc(var(--spacing) * 6);
    }

    .mb-8 {
        margin-bottom: calc(var(--spacing) * 8);
    }

    .mb-12 {
        margin-bottom: calc(var(--spacing) * 12);
    }

    .mb-16 {
        margin-bottom: calc(var(--spacing) * 16);
    }

    .line-clamp-2 {
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        display: -webkit-box;
        overflow: hidden;
    }

    .block {
        display: block;
    }

    .flex {
        display: flex;
    }

    .grid {
        display: grid;
    }

    .hidden {
        display: none;
    }

    .inline-block {
        display: inline-block;
    }

    .inline-flex {
        display: inline-flex;
    }

    .field-sizing-content {
        field-sizing: content;
    }

    .aspect-\[3\/4\] {
        aspect-ratio: 3 / 4;
    }

    .aspect-\[4\/3\] {
        aspect-ratio: 4 / 3;
    }

    .aspect-square {
        aspect-ratio: 1;
    }

    .aspect-video {
        aspect-ratio: var(--aspect-video);
    }

    .size-4 {
        width: calc(var(--spacing) * 4);
        height: calc(var(--spacing) * 4);
    }

    .size-9 {
        width: calc(var(--spacing) * 9);
        height: calc(var(--spacing) * 9);
    }

    .size-10 {
        width: calc(var(--spacing) * 10);
        height: calc(var(--spacing) * 10);
    }

    .size-full {
        width: 100%;
        height: 100%;
    }

    .h-1 {
        height: calc(var(--spacing) * 1);
    }

    .h-2 {
        height: calc(var(--spacing) * 2);
    }

    .h-4 {
        height: calc(var(--spacing) * 4);
    }

    .h-5 {
        height: calc(var(--spacing) * 5);
    }

    .h-6 {
        height: calc(var(--spacing) * 6);
    }

    .h-8 {
        height: calc(var(--spacing) * 8);
    }

    .h-9 {
        height: calc(var(--spacing) * 9);
    }

    .h-10 {
        height: calc(var(--spacing) * 10);
    }

    .h-12 {
        height: calc(var(--spacing) * 12);
    }

    .h-16 {
        height: calc(var(--spacing) * 16);
    }

    .h-64 {
        height: calc(var(--spacing) * 64);
    }

    .h-auto {
        height: auto;
    }

    .h-full {
        height: 100%;
    }

    .h-screen {
        height: 100dvh;
    }

    .min-h-16 {
        min-height: calc(var(--spacing) * 16);
    }

    .min-h-screen {
        min-height: 100vh;
    }

    .w-2 {
        width: calc(var(--spacing) * 2);
    }

    .w-4 {
        width: calc(var(--spacing) * 4);
    }

    .w-5 {
        width: calc(var(--spacing) * 5);
    }

    .w-6 {
        width: calc(var(--spacing) * 6);
    }

    .w-8 {
        width: calc(var(--spacing) * 8);
    }

    .w-10 {
        width: calc(var(--spacing) * 10);
    }

    .w-12 {
        width: calc(var(--spacing) * 12);
    }

    .w-16 {
        width: calc(var(--spacing) * 16);
    }

    .w-20 {
        width: calc(var(--spacing) * 20);
    }

    .w-full {
        width: 100%;
    }

    .w-screen {
        width: 100dvw;
    }

    .max-w-3xl {
        max-width: var(--container-3xl);
    }

    .max-w-4xl {
        max-width: var(--container-4xl);
    }

    .max-w-6xl {
        max-width: var(--container-6xl);
    }

    .w-\[calc\(100\%-2rem\)\] {
        width: calc(100dvw - 2rem);
    }

    .max-w-\[calc\(100\%-2rem\)\] {
        max-width: calc(100% - 2rem);
    }

    .max-w-none {
        max-width: none;
    }

    .max-w-320 {
        max-width: 320px;
    }

    .w-\[85\%\] {
        width: 85%;
    }

    .min-w-0 {
        min-width: calc(var(--spacing) * 0);
    }

    .min-w-280 {
        min-width: 280px;
    }

    .min-w-\[calc\(33\.333\%-1rem\)\] {
        min-width: calc(33.333% - 1rem);
    }

    .flex-shrink-0, .shrink-0 {
        flex-shrink: 0;
    }

    .-translate-x-0 {
        --tw-translate-x: calc(var(--spacing) * 0);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .-translate-x-4 {
        --tw-translate-x: calc(var(--spacing) * -4);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .translate-x-4 {
        --tw-translate-x: calc(var(--spacing) * 4);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .translate-x-\[-50\%\] {
        --tw-translate-x: -50%;
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .-translate-y-1\/2 {
        --tw-translate-y: calc(calc(1 / 2 * 100%) * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .translate-x-full {
        --tw-translate-x: 100%;
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .translate-y-\[-50\%\] {
        --tw-translate-y: -50%;
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .rotate-3 {
        rotate: 3deg;
    }

    .transform {
        transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
    }

    .cursor-pointer {
        cursor: pointer;
    }

    .resize-none {
        resize: none;
    }

    .auto-rows-min {
        grid-auto-rows: min-content;
    }

    .grid-rows-\[auto_auto\] {
        grid-template-rows: auto auto;
    }

    .flex-col {
        flex-direction: column;
    }

    .flex-col-reverse {
        flex-direction: column-reverse;
    }

    .flex-wrap {
        flex-wrap: wrap;
    }

    .items-center {
        align-items: center;
    }

    .items-start {
        align-items: flex-start;
    }

    .justify-between {
        justify-content: space-between;
    }

    .justify-center {
        justify-content: center;
    }

    .gap-1 {
        gap: calc(var(--spacing) * 1);
    }

    .gap-1\.5 {
        gap: calc(var(--spacing) * 1.5);
    }

    .gap-2 {
        gap: calc(var(--spacing) * 2);
    }

    .gap-3 {
        gap: calc(var(--spacing) * 3);
    }

    .gap-4 {
        gap: calc(var(--spacing) * 4);
    }

    .gap-6 {
        gap: calc(var(--spacing) * 6);
    }

    .gap-8 {
        gap: calc(var(--spacing) * 8);
    }

    .gap-12 {
        gap: calc(var(--spacing) * 12);
    }

    :where(.space-y-2 > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
    }

    :where(.space-y-4 > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }

    :where(.space-y-6 > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
    }

    :where(.space-y-8 > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
    }

    .self-start {
        align-self: flex-start;
    }

    .justify-self-end {
        justify-self: flex-end;
    }

    .overflow-hidden {
        overflow: hidden;
    }

    .overflow-auto {
        overflow: auto;
    }

    .rounded-2xl {
        border-radius: var(--radius-2xl);
    }

    .rounded-3xl {
        border-radius: var(--radius-3xl);
    }

    .rounded-full {
        border-radius: 3.40282e38px;
    }

    .rounded-lg {
        border-radius: var(--radius);
    }

    .rounded-md {
        border-radius: calc(var(--radius) - 2px);
    }

    .rounded-xl {
        border-radius: calc(var(--radius) + 4px);
    }

    .rounded-xs {
        border-radius: var(--radius-xs);
    }

    .border {
        border-style: var(--tw-border-style);
        border-width: 1px;
    }

    .border-t {
        border-top-style: var(--tw-border-style);
        border-top-width: 1px;
    }

    .border-b {
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 1px;
    }

    .border-border {
        border-color: var(--border);
    }

    .border-input {
        border-color: var(--input);
    }

    .bg-background {
        background-color: var(--background);
    }

    .bg-black\/50 {
        background-color: #00000080;
    }

    @supports (color: color-mix(in lab, red, red)) {
        .bg-black\/50 {
            background-color: color-mix(in oklab, var(--color-black) 50%, transparent);
        }
    }

    .bg-card {
        background-color: var(--card);
    }

    .bg-destructive {
        background-color: var(--destructive);
    }

    .bg-gray-100 {
        background-color: var(--color-gray-100);
    }

    .bg-input-background {
        background-color: var(--input-background);
    }

    .bg-muted {
        background-color: var(--muted);
    }

    .bg-primary {
        background-color: var(--primary);
    }

    .bg-primary\/5 {
        background-color: var(--primary);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .bg-primary\/5 {
            background-color: color-mix(in oklab, var(--primary) 5%, transparent);
        }
    }

    .bg-primary\/10 {
        background-color: var(--primary);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .bg-primary\/10 {
            background-color: color-mix(in oklab, var(--primary) 10%, transparent);
        }
    }

    .bg-primary\/30 {
        background-color: var(--primary);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .bg-primary\/30 {
            background-color: color-mix(in oklab, var(--primary) 30%, transparent);
        }
    }

    .bg-secondary {
        background-color: var(--secondary);
    }

    .bg-secondary\/30 {
        background-color: var(--secondary);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .bg-secondary\/30 {
            background-color: color-mix(in oklab, var(--secondary) 30%, transparent);
        }
    }

    .bg-white {
        background-color: var(--color-white);
    }

    .bg-white\/80 {
        background-color: #fffc;
    }

    @supports (color: color-mix(in lab, red, red)) {
        .bg-white\/80 {
            background-color: color-mix(in oklab, var(--color-white) 80%, transparent);
        }
    }

    .bg-gradient-to-b {
        --tw-gradient-position: to bottom in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops));
    }

    .bg-gradient-to-r {
        --tw-gradient-position: to right in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops));
    }

    .from-background {
        --tw-gradient-from: var(--background);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .from-secondary\/20 {
        --tw-gradient-from: var(--secondary);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .from-secondary\/20 {
            --tw-gradient-from: color-mix(in oklab, var(--secondary) 20%, transparent);
        }
    }

    .from-secondary\/30 {
        --tw-gradient-from: var(--secondary);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .from-secondary\/30 {
            --tw-gradient-from: color-mix(in oklab, var(--secondary) 30%, transparent);
        }
    }

    .to-background {
        --tw-gradient-to: var(--background);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .to-primary\/10 {
        --tw-gradient-to: var(--primary);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .to-primary\/10 {
            --tw-gradient-to: color-mix(in oklab, var(--primary) 10%, transparent);
        }
    }

    .to-secondary\/20 {
        --tw-gradient-to: var(--secondary);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .to-secondary\/20 {
            --tw-gradient-to: color-mix(in oklab, var(--secondary) 20%, transparent);
        }
    }

    .object-cover {
        object-fit: cover;
    }

    .p-0 {
        padding: calc(var(--spacing) * 0);
    }

    .p-2 {
        padding: calc(var(--spacing) * 2);
    }

    .p-4 {
        padding: calc(var(--spacing) * 4);
    }

    .p-6 {
        padding: calc(var(--spacing) * 6);
    }

    .p-8 {
        padding: calc(var(--spacing) * 8);
    }

    .px-3 {
        padding-inline: calc(var(--spacing) * 3);
    }

    .px-4 {
        padding-inline: calc(var(--spacing) * 4);
    }

    .px-6 {
        padding-inline: calc(var(--spacing) * 6);
    }

    .py-1 {
        padding-block: calc(var(--spacing) * 1);
    }

    .py-2 {
        padding-block: calc(var(--spacing) * 2);
    }

    .py-4 {
        padding-block: calc(var(--spacing) * 4);
    }

    .py-12 {
        padding-block: calc(var(--spacing) * 12);
    }

    .py-20 {
        padding-block: calc(var(--spacing) * 20);
    }

    .pt-4 {
        padding-top: calc(var(--spacing) * 4);
    }

    .pt-6 {
        padding-top: calc(var(--spacing) * 6);
    }

    .pt-8 {
        padding-top: calc(var(--spacing) * 8);
    }

    .pb-6 {
        padding-bottom: calc(var(--spacing) * 6);
    }

    .text-center {
        text-align: center;
    }

    .align-middle {
        vertical-align: middle;
    }

    .text-2xl {
        font-size: var(--text-2xl);
        line-height: var(--tw-leading, var(--text-2xl--line-height));
    }

    .text-3xl {
        font-size: var(--text-3xl);
        line-height: var(--tw-leading, var(--text-3xl--line-height));
    }

    .text-4xl {
        font-size: var(--text-4xl);
        line-height: var(--tw-leading, var(--text-4xl--line-height));
    }

    .text-5xl {
        font-size: var(--text-5xl);
        line-height: var(--tw-leading, var(--text-5xl--line-height));
    }

    .text-6xl {
        font-size: var(--text-6xl);
        line-height: var(--tw-leading, var(--text-6xl--line-height));
    }

    .text-7xl {
        font-size: var(--text-7xl);
        line-height: var(--tw-leading, var(--text-7xl--line-height));
    }

    .text-base {
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
    }

    .text-lg {
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height));
    }

    .text-sm {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
    }

    .leading-none {
        --tw-leading: 1;
        line-height: 1;
    }

    .leading-relaxed {
        --tw-leading: var(--leading-relaxed);
        line-height: var(--leading-relaxed);
    }

    .font-medium {
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
    }

    .font-semibold {
        --tw-font-weight: var(--font-weight-semibold);
        font-weight: var(--font-weight-semibold);
    }
    .font-bold {
        --tw-font-weight: var(--font-weight-bold);
        font-weight: var(--font-weight-bold);
    }

    .whitespace-nowrap {
        white-space: nowrap;
    }

    .text-card-foreground {
        color: var(--card-foreground);
    }

    .text-foreground {
        color: var(--foreground);
    }

    .text-muted-foreground {
        color: var(--muted-foreground);
    }

    .text-primary {
        color: var(--primary);
    }

    .text-primary-foreground {
        color: var(--primary-foreground);
    }

    .text-secondary-foreground {
        color: var(--secondary-foreground);
    }

    .text-white {
        color: var(--color-white);
    }

    .underline-offset-4 {
        text-underline-offset: 4px;
    }

    .opacity-70 {
        opacity: .7;
    }

    .opacity-0 {
        opacity: 0;
    }

    .opacity-100 {
        opacity: 1;
    }

    .shadow-2xl {
        --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, #00000040);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    .shadow-lg {
        --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, #0000001a), 0 4px 6px -4px var(--tw-shadow-color, #0000001a);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    .shadow-xl {
        --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, #0000001a), 0 8px 10px -6px var(--tw-shadow-color, #0000001a);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    .ring-offset-background {
        --tw-ring-offset-color: var(--background);
    }

    .outline {
        outline-style: var(--tw-outline-style);
        outline-width: 1px;
    }

    .backdrop-blur-md {
        --tw-backdrop-blur: blur(var(--blur-md));
        -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
        backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    }

    .transition-\[color\,box-shadow\] {
        transition-property: color, box-shadow;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }

    .transition-all {
        transition-property: all;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }

    .transition-colors {
        transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }

    .transition-opacity {
        transition-property: opacity;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }

    .transition-shadow {
        transition-property: box-shadow;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }

    .transition-transform {
        transition-property: transform, translate, scale, rotate;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }

    .duration-200 {
        --tw-duration: .2s;
        transition-duration: .2s;
    }

    .duration-300 {
        --tw-duration: .3s;
        transition-duration: .3s;
    }

    .duration-500 {
        --tw-duration: .5s;
        transition-duration: .5s;
    }

    .ease-in-out {
        --tw-ease: var(--ease-in-out);
        transition-timing-function: var(--ease-in-out);
    }

    .outline-none {
        --tw-outline-style: none;
        outline-style: none;
    }

    .select-none {
        -webkit-user-select: none;
        user-select: none;
    }

    @media (hover: hover) {
        .group-hover\:translate-x-1:is(:where(.group):hover *) {
            --tw-translate-x: calc(var(--spacing) * 1);
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }
    }

    @media (hover: hover) {
        .group-hover\:scale-105:is(:where(.group):hover *) {
            --tw-scale-x: 105%;
            --tw-scale-y: 105%;
            --tw-scale-z: 105%;
            scale: var(--tw-scale-x) var(--tw-scale-y);
        }
    }

    @media (hover: hover) {
        .group-hover\:gap-2:is(:where(.group):hover *) {
            gap: calc(var(--spacing) * 2);
        }
    }

    @media (hover: hover) {
        .group-hover\:text-primary:is(:where(.group):hover *) {
            color: var(--primary);
        }
    }

    .group-data-\[disabled\=true\]\:pointer-events-none:is(:where(.group)[data-disabled="true"] *) {
        pointer-events: none;
    }

    .group-data-\[disabled\=true\]\:opacity-50:is(:where(.group)[data-disabled="true"] *) {
        opacity: .5;
    }

    .peer-disabled\:cursor-not-allowed:is(:where(.peer):disabled ~ *) {
        cursor: not-allowed;
    }

    .peer-disabled\:opacity-50:is(:where(.peer):disabled ~ *) {
        opacity: .5;
    }

    .selection\:bg-primary ::selection, .selection\:bg-primary::selection {
        background-color: var(--primary);
    }

    .selection\:text-primary-foreground ::selection, .selection\:text-primary-foreground::selection {
        color: var(--primary-foreground);
    }

    .file\:inline-flex::file-selector-button {
        display: inline-flex;
    }

    .file\:h-7::file-selector-button {
        height: calc(var(--spacing) * 7);
    }

    .file\:border-0::file-selector-button {
        border-style: var(--tw-border-style);
        border-width: 0;
    }

    .file\:bg-transparent::file-selector-button {
        background-color: #0000;
    }

    .file\:text-sm::file-selector-button {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
    }

    .file\:font-medium::file-selector-button {
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
    }

    .file\:text-foreground::file-selector-button {
        color: var(--foreground);
    }

    .placeholder\:text-muted-foreground::placeholder {
        color: var(--muted-foreground);
    }

    @media (hover: hover) {
        .hover\:scale-105:hover {
            --tw-scale-x: 105%;
            --tw-scale-y: 105%;
            --tw-scale-z: 105%;
            scale: var(--tw-scale-x) var(--tw-scale-y);
        }
    }

    @media (hover: hover) {
        .hover\:bg-accent:hover {
            background-color: var(--accent);
        }
    }

    @media (hover: hover) {
        .hover\:bg-destructive\/90:hover {
            background-color: var(--destructive);
        }

        @supports (color: color-mix(in lab, red, red)) {
            .hover\:bg-destructive\/90:hover {
                background-color: color-mix(in oklab, var(--destructive) 90%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .hover\:bg-muted:hover {
            background-color: var(--muted);
        }
    }

    @media (hover: hover) {
        .hover\:bg-primary\/20:hover {
            background-color: var(--primary);
        }

        @supports (color: color-mix(in lab, red, red)) {
            .hover\:bg-primary\/20:hover {
                background-color: color-mix(in oklab, var(--primary) 20%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .hover\:bg-primary\/90:hover {
            background-color: var(--primary);
        }

        @supports (color: color-mix(in lab, red, red)) {
            .hover\:bg-primary\/90:hover {
                background-color: color-mix(in oklab, var(--primary) 90%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .hover\:bg-secondary\/80:hover {
            background-color: var(--secondary);
        }

        @supports (color: color-mix(in lab, red, red)) {
            .hover\:bg-secondary\/80:hover {
                background-color: color-mix(in oklab, var(--secondary) 80%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .hover\:text-accent-foreground:hover {
            color: var(--accent-foreground);
        }
    }

    @media (hover: hover) {
        .hover\:text-primary:hover {
            color: var(--primary);
        }
    }

    @media (hover: hover) {
        .hover\:underline:hover {
            text-decoration-line: underline;
        }
    }

    @media (hover: hover) {
        .hover\:opacity-100:hover {
            opacity: 1;
        }
    }

    @media (hover: hover) {
        .hover\:shadow-lg:hover {
            --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, #0000001a), 0 4px 6px -4px var(--tw-shadow-color, #0000001a);
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        }
    }

    @media (hover: hover) {
        .hover\:shadow-xl:hover {
            --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, #0000001a), 0 8px 10px -6px var(--tw-shadow-color, #0000001a);
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        }
    }

    .focus\:ring-2:focus {
        --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    .focus\:ring-ring:focus {
        --tw-ring-color: var(--ring);
    }

    .focus\:ring-offset-2:focus {
        --tw-ring-offset-width: 2px;
        --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }

    .focus\:outline-hidden:focus {
        --tw-outline-style: none;
        outline-style: none;
    }

    @media (forced-colors: active) {
        .focus\:outline-hidden:focus {
            outline-offset: 2px;
            outline: 2px solid #0000;
        }
    }

    .focus-visible\:border-ring:focus-visible {
        border-color: var(--ring);
    }

    .focus-visible\:ring-\[3px\]:focus-visible {
        --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    .focus-visible\:ring-destructive\/20:focus-visible {
        --tw-ring-color: var(--destructive);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .focus-visible\:ring-destructive\/20:focus-visible {
            --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
        }
    }

    .focus-visible\:ring-ring\/50:focus-visible {
        --tw-ring-color: var(--ring);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .focus-visible\:ring-ring\/50:focus-visible {
            --tw-ring-color: color-mix(in oklab, var(--ring) 50%, transparent);
        }
    }

    .disabled\:pointer-events-none:disabled {
        pointer-events: none;
    }

    .disabled\:cursor-not-allowed:disabled {
        cursor: not-allowed;
    }

    .disabled\:opacity-50:disabled {
        opacity: .5;
    }

    .has-data-\[slot\=card-action\]\:grid-cols-\[1fr_auto\]:has([data-slot="card-action"]) {
        grid-template-columns: 1fr auto;
    }

    .has-\[\>svg\]\:px-2\.5:has( > svg) {
        padding-inline: calc(var(--spacing) * 2.5);
    }

    .has-\[\>svg\]\:px-3:has( > svg) {
        padding-inline: calc(var(--spacing) * 3);
    }

    .has-\[\>svg\]\:px-4:has( > svg) {
        padding-inline: calc(var(--spacing) * 4);
    }

    .aria-invalid\:border-destructive[aria-invalid="true"] {
        border-color: var(--destructive);
    }

    .aria-invalid\:ring-destructive\/20[aria-invalid="true"] {
        --tw-ring-color: var(--destructive);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .aria-invalid\:ring-destructive\/20[aria-invalid="true"] {
            --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
        }
    }

    .data-\[state\=closed\]\:animate-out[data-state="closed"] {
        animation: exit var(--tw-duration, .15s) var(--tw-ease, ease);
    }

    .data-\[state\=closed\]\:fade-out-0[data-state="closed"] {
        --tw-exit-opacity: 0;
    }

    .data-\[state\=closed\]\:zoom-out-95[data-state="closed"] {
        --tw-exit-scale: .95;
    }

    .data-\[state\=open\]\:animate-in[data-state="open"] {
        animation: enter var(--tw-duration, .15s) var(--tw-ease, ease);
    }

    .data-\[state\=open\]\:bg-accent[data-state="open"] {
        background-color: var(--accent);
    }

    .data-\[state\=open\]\:text-muted-foreground[data-state="open"] {
        color: var(--muted-foreground);
    }

    .data-\[state\=open\]\:fade-in-0[data-state="open"] {
        --tw-enter-opacity: 0;
    }

    .data-\[state\=open\]\:zoom-in-95[data-state="open"] {
        --tw-enter-scale: .95;
    }

    @media (width >= 40rem) {
        .sm\:max-w-lg {
            max-width: var(--container-lg);
        }
    }

    @media (width >= 40rem) {
        .sm\:grid-cols-2 {
            grid-template-columns: repeat(2, minmax(0, 1fr));
        }
    }

    @media (width >= 40rem) {
        .sm\:flex-row {
            flex-direction: row;
        }
    }

    @media (width >= 40rem) {
        .sm\:justify-end {
            justify-content: flex-end;
        }
    }

    @media (width >= 40rem) {
        .sm\:text-left {
            text-align: left;
        }
    }

    @media (width >= 48rem) {
        .md\:col-span-2 {
            grid-column: span 2 / span 2;
        }
    }

    @media (width >= 48rem) {
        .md\:col-span-3 {
            grid-column: span 3 / span 3;
        }
    }

    @media (width >= 48rem) {
        .md\:flex {
            display: flex;
        }
    }

    @media (width >= 48rem) {
        .md\:hidden {
            display: none;
        }
    }

    @media (width >= 48rem) {
        .md\:aspect-auto {
            aspect-ratio: auto;
        }
    }

    @media (width >= 48rem) {
        .md\:grid-cols-2 {
            grid-template-columns: repeat(2, minmax(0, 1fr));
        }
    }

    @media (width >= 48rem) {
        .md\:grid-cols-3 {
            grid-template-columns: repeat(3, minmax(0, 1fr));
        }
    }

    @media (width >= 48rem) {
        .md\:grid-cols-5 {
            grid-template-columns: repeat(5, minmax(0, 1fr));
        }
    }

    @media (width >= 48rem) {
        .md\:py-8 {
            padding-block: calc(var(--spacing) * 8);
        }
    }
    @media (width >= 48rem) {
        .md\:px-4 {
            padding-inline: calc(var(--spacing) * 4);
        }
    }

    @media (width >= 48rem) {
        .md\:text-4xl {
            font-size: var(--text-4xl);
            line-height: var(--tw-leading, var(--text-4xl--line-height));
        }
    }

    @media (width >= 48rem) {
        .md\:text-5xl {
            font-size: var(--text-5xl);
            line-height: var(--tw-leading, var(--text-5xl--line-height));
        }
    }

    @media (width >= 48rem) {
        .md\:text-sm {
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height));
        }
    }

    @media (width >= 64rem) {
        .lg\:grid-cols-4 {
            grid-template-columns: repeat(4, minmax(0, 1fr));
        }

        .lg\:flex {
            display: flex;
        }

        .lg\:hidden {
            display: none;
        }
    }

    .dark\:border-input:is(.dark *) {
        border-color: var(--input);
    }

    .dark\:bg-destructive\/60:is(.dark *) {
        background-color: var(--destructive);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .dark\:bg-destructive\/60:is(.dark *) {
            background-color: color-mix(in oklab, var(--destructive) 60%, transparent);
        }
    }

    .dark\:bg-input\/30:is(.dark *) {
        background-color: var(--input);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .dark\:bg-input\/30:is(.dark *) {
            background-color: color-mix(in oklab, var(--input) 30%, transparent);
        }
    }

    @media (hover: hover) {
        .dark\:hover\:bg-accent\/50:is(.dark *):hover {
            background-color: var(--accent);
        }

        @supports (color: color-mix(in lab, red, red)) {
            .dark\:hover\:bg-accent\/50:is(.dark *):hover {
                background-color: color-mix(in oklab, var(--accent) 50%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .dark\:hover\:bg-input\/50:is(.dark *):hover {
            background-color: var(--input);
        }

        @supports (color: color-mix(in lab, red, red)) {
            .dark\:hover\:bg-input\/50:is(.dark *):hover {
                background-color: color-mix(in oklab, var(--input) 50%, transparent);
            }
        }
    }

    .dark\:focus-visible\:ring-destructive\/40:is(.dark *):focus-visible {
        --tw-ring-color: var(--destructive);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .dark\:focus-visible\:ring-destructive\/40:is(.dark *):focus-visible {
            --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
        }
    }

    .dark\:aria-invalid\:ring-destructive\/40:is(.dark *)[aria-invalid="true"] {
        --tw-ring-color: var(--destructive);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .dark\:aria-invalid\:ring-destructive\/40:is(.dark *)[aria-invalid="true"] {
            --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
        }
    }

    .\[\&_svg\]\:pointer-events-none svg {
        pointer-events: none;
    }

    .\[\&_svg\]\:shrink-0 svg {
        flex-shrink: 0;
    }

    .\[\&_svg\:not\(\[class\*\=\'size-\'\]\)\]\:size-4 svg:not([class*="size-"]) {
        width: calc(var(--spacing) * 4);
        height: calc(var(--spacing) * 4);
    }

    .\[\.border-b\]\:pb-6.border-b {
        padding-bottom: calc(var(--spacing) * 6);
    }

    .\[\.border-t\]\:pt-6.border-t {
        padding-top: calc(var(--spacing) * 6);
    }

    .\[\&\:last-child\]\:pb-6:last-child {
        padding-bottom: calc(var(--spacing) * 6);
    }
}

:root {
    --font-size: 16px;
    --background: #faf8f5;
    --foreground: #4a5568;
    --card: #fff;
    --card-foreground: #4a5568;
    --popover: #fff;
    --popover-foreground: #4a5568;
    --primary: #7c9885;
    --primary-foreground: #fff;
    --secondary: #d4e4e8;
    --secondary-foreground: #4a5568;
    --muted: #f3f1ed;
    --muted-foreground: #8b95a5;
    --accent: #e8d5c4;
    --accent-foreground: #4a5568;
    --destructive: #d4183d;
    --destructive-foreground: #fff;
    --border: #7c988526;
    --input: transparent;
    --input-background: #fff;
    --switch-background: #cbced4;
    --font-weight-medium: 500;
    --font-weight-normal: 400;
    --ring: #7c9885;
    --chart-1: oklch(.646 .222 41.116);
    --chart-2: oklch(.6 .118 184.704);
    --chart-3: oklch(.398 .07 227.392);
    --chart-4: oklch(.828 .189 84.429);
    --chart-5: oklch(.769 .188 70.08);
    --radius: .75rem;
    --sidebar: oklch(.985 0 0);
    --sidebar-foreground: oklch(.145 0 0);
    --sidebar-primary: #030213;
    --sidebar-primary-foreground: oklch(.985 0 0);
    --sidebar-accent: oklch(.97 0 0);
    --sidebar-accent-foreground: oklch(.205 0 0);
    --sidebar-border: oklch(.922 0 0);
    --sidebar-ring: oklch(.708 0 0);
}

.dark {
    --background: oklch(.145 0 0);
    --foreground: oklch(.985 0 0);
    --card: oklch(.145 0 0);
    --card-foreground: oklch(.985 0 0);
    --popover: oklch(.145 0 0);
    --popover-foreground: oklch(.985 0 0);
    --primary: oklch(.985 0 0);
    --primary-foreground: oklch(.205 0 0);
    --secondary: oklch(.269 0 0);
    --secondary-foreground: oklch(.985 0 0);
    --muted: oklch(.269 0 0);
    --muted-foreground: oklch(.708 0 0);
    --accent: oklch(.269 0 0);
    --accent-foreground: oklch(.985 0 0);
    --destructive: oklch(.396 .141 25.723);
    --destructive-foreground: oklch(.637 .237 25.331);
    --border: oklch(.269 0 0);
    --input: oklch(.269 0 0);
    --ring: oklch(.439 0 0);
    --font-weight-medium: 500;
    --font-weight-normal: 400;
    --chart-1: oklch(.488 .243 264.376);
    --chart-2: oklch(.696 .17 162.48);
    --chart-3: oklch(.769 .188 70.08);
    --chart-4: oklch(.627 .265 303.9);
    --chart-5: oklch(.645 .246 16.439);
    --sidebar: oklch(.205 0 0);
    --sidebar-foreground: oklch(.985 0 0);
    --sidebar-primary: oklch(.488 .243 264.376);
    --sidebar-primary-foreground: oklch(.985 0 0);
    --sidebar-accent: oklch(.269 0 0);
    --sidebar-accent-foreground: oklch(.985 0 0);
    --sidebar-border: oklch(.269 0 0);
    --sidebar-ring: oklch(.439 0 0);
}

html {
    font-size: var(--font-size);
}

@property --tw-translate-x {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-translate-y {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-translate-z {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-rotate-x {
    syntax: "*";
    inherits: false;
    initial-value: rotateX(0);
}

@property --tw-rotate-y {
    syntax: "*";
    inherits: false;
    initial-value: rotateY(0);
}

@property --tw-rotate-z {
    syntax: "*";
    inherits: false;
    initial-value: rotateZ(0);
}

@property --tw-skew-x {
    syntax: "*";
    inherits: false;
    initial-value: skewX(0);
}

@property --tw-skew-y {
    syntax: "*";
    inherits: false;
    initial-value: skewY(0);
}

@property --tw-space-y-reverse {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-border-style {
    syntax: "*";
    inherits: false;
    initial-value: solid;
}

@property --tw-gradient-position {
    syntax: "*";
    inherits: false
}

@property --tw-gradient-from {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
}

@property --tw-gradient-via {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
}

@property --tw-gradient-to {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
}

@property --tw-gradient-stops {
    syntax: "*";
    inherits: false
}

@property --tw-gradient-via-stops {
    syntax: "*";
    inherits: false
}

@property --tw-gradient-from-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 0%;
}

@property --tw-gradient-via-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 50%;
}

@property --tw-gradient-to-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 100%;
}

@property --tw-leading {
    syntax: "*";
    inherits: false
}

@property --tw-font-weight {
    syntax: "*";
    inherits: false
}

@property --tw-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-shadow-color {
    syntax: "*";
    inherits: false
}

@property --tw-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%;
}

@property --tw-inset-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-inset-shadow-color {
    syntax: "*";
    inherits: false
}

@property --tw-inset-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%;
}

@property --tw-ring-color {
    syntax: "*";
    inherits: false
}

@property --tw-ring-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-inset-ring-color {
    syntax: "*";
    inherits: false
}

@property --tw-inset-ring-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-ring-inset {
    syntax: "*";
    inherits: false
}

@property --tw-ring-offset-width {
    syntax: "<length>";
    inherits: false;
    initial-value: 0;
}

@property --tw-ring-offset-color {
    syntax: "*";
    inherits: false;
    initial-value: #fff;
}

@property --tw-ring-offset-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-outline-style {
    syntax: "*";
    inherits: false;
    initial-value: solid;
}

@property --tw-backdrop-blur {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-brightness {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-contrast {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-grayscale {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-hue-rotate {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-invert {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-opacity {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-saturate {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-sepia {
    syntax: "*";
    inherits: false
}

@property --tw-duration {
    syntax: "*";
    inherits: false
}

@property --tw-ease {
    syntax: "*";
    inherits: false
}

@property --tw-scale-x {
    syntax: "*";
    inherits: false;
    initial-value: 1;
}

@property --tw-scale-y {
    syntax: "*";
    inherits: false;
    initial-value: 1;
}

@property --tw-scale-z {
    syntax: "*";
    inherits: false;
    initial-value: 1;
}

@keyframes enter {
    from {
        opacity: var(--tw-enter-opacity, 1);
        transform: translate3d(var(--tw-enter-translate-x, 0), var(--tw-enter-translate-y, 0), 0) scale3d(var(--tw-enter-scale, 1), var(--tw-enter-scale, 1), var(--tw-enter-scale, 1)) rotate(var(--tw-enter-rotate, 0));
    }
}

@keyframes exit {
    to {
        opacity: var(--tw-exit-opacity, 1);
        transform: translate3d(var(--tw-exit-translate-x, 0), var(--tw-exit-translate-y, 0), 0) scale3d(var(--tw-exit-scale, 1), var(--tw-exit-scale, 1), var(--tw-exit-scale, 1)) rotate(var(--tw-exit-rotate, 0));
    }
}

.dialog {
    max-height: calc(100dvh - 4rem);
    max-width: 1888px
}

.z-\[-1\] {
    z-index: -1;
}

.z-\[40\] {
    z-index: 40;
}

.z-\[60\] {
    z-index: 60;
}

.z-\[70\] {
    z-index: 70;
}

.z-\[100000\] {
    z-index: 100000;
}

@keyframes slideIn {
    from {
        opacity: 0;
        transform: translateX(1rem);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

.animate-fadeIn {
    animation: fadeIn 0.3s ease-out;
}

@keyframes spin {
    100% {
        transform: rotate(360deg);
    }
}

@keyframes dash {
    0% {
        stroke-dasharray: 1, 150;
        stroke-dashoffset: 0;
    }
    50% {
        stroke-dasharray: 90, 150;
        stroke-dashoffset: -35;
    }
    100% {
        stroke-dasharray: 90, 150;
        stroke-dashoffset: -124;
    }
}

.animate-dash {
    animation: dash 1.5s ease-in-out infinite;
}

/* custom */

.card-shadow {
    box-shadow: 0 0 3px #00000088
}

.backdrop {
    background-color: #2525258e;
    backdrop-filter: blur(5px);
}

.backdrop-bg {

}

.h-100 {
    height: 100px;
}

.w-100 {
    width: 100px;
}

.text-shadow {
    text-shadow: 0 0 10px #000000
}
input{
    width: 100%;
    border-radius: 8px;
    padding: 8px 16px;
    box-shadow: 0 0 3px #00000088;
    outline: none;
    border: none;
    transition: box-shadow .3s;
}
